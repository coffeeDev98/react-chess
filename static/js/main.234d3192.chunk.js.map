{"version":3,"sources":["hooks/useChess.tsx","assets/images/wQ.svg","assets/images/wR.svg","assets/images/wB.svg","assets/images/wN.svg","hooks/useAgora.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Chess","require","useChess","useState","chess","fen","setFen","pendingMove","setPendingMove","promotionModal","setPromotionModal","lastMove","setLastMove","movesLog","setMovesLog","gameOver","setGameOver","useEffect","console","log","showPromotionModal","handleMove","move","moves","verbose","i","len","length","flags","indexOf","from","to","moveVerbose","san","in_check","in_checkmate","in_stalemate","in_threefold_repetition","game_over","history","turnColor","turn","colors","undoMove","lastMoveVerbose","undo","promotion","e","calcMovable","dests","Map","SQUARES","forEach","s","ms","square","set","map","m","free","showDests","events","after","metadeta","rookCastle","useAgora","channel","setChannel","client","AgoraRTM","createInstance","playerMeta","uid","Math","floor","random","toString","token","a","axios","get","then","res","data","login","newChannel","createChannel","join","playerLogin","on","message","memberId","parsedTextMessage","JSON","parse","text","window","document","getElementById","appendChild","createElement","append","msg","sendMsgInChannel","textObject","msgObject","stringify","messageType","sendMessage","App","innerWidth","setInnerWidth","innerHeight","setInnerHeight","updateDimensions","addEventListener","removeEventListener","config","coordinates","addPieceZIndex","autoCastle","highlight","check","selectable","enabled","movable","select","key","className","id","role","onClick","src","queen","alt","style","width","rook","bishop","knight","padding","border","display","type","value","height","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.234d3192.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { ChessInstance, PieceType, ShortMove } from \"chess.js\";\r\nimport { colors } from \"chessground/types\";\r\n\r\nconst Chess = require(\"chess.js\");\r\n\r\nconst useChess = () => {\r\n  const [chess] = useState<ChessInstance>(\r\n    new Chess(\"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\")\r\n  );\r\n  const [fen, setFen] = useState(chess.fen());\r\n  const [pendingMove, setPendingMove] = useState<any>();\r\n  const [promotionModal, setPromotionModal] = useState(false);\r\n  const [lastMove, setLastMove] = useState<any>();\r\n  const [movesLog, setMovesLog] = useState<String[]>();\r\n  const [gameOver, setGameOver] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    console.log(\"pendingMove: \", pendingMove);\r\n  }, [pendingMove]);\r\n\r\n  const showPromotionModal = () => setPromotionModal(true);\r\n  const hidePromotionModal = () => setPromotionModal(false);\r\n  const checkGameOver = () => chess.game_over();\r\n\r\n  const turnColor = () => (chess.turn() === \"w\" ? colors[0] : colors[1]);\r\n\r\n  const handleMove = (move: ShortMove) => {\r\n    const moves = chess.moves({ verbose: true });\r\n    // console.log(\"moves: \", chess.moves());\r\n\r\n    for (let i = 0, len = moves.length; i < len; i++) {\r\n      /* eslint-disable-line */\r\n      if (moves[i].flags.indexOf(\"p\") !== -1 && moves[i].from === move.from) {\r\n        setPendingMove([move.from, move.to]);\r\n        showPromotionModal();\r\n        return;\r\n      }\r\n    }\r\n    const moveVerbose = chess.move(move);\r\n    if (moveVerbose) {\r\n      console.log(moveVerbose.san);\r\n      setFen(chess.fen());\r\n      console.log(\"GAME STATS\", {\r\n        in_check: chess.in_check(),\r\n        in_checkmate: chess.in_checkmate(),\r\n        in_stalemate: chess.in_stalemate(),\r\n        in_threefold_repetition: chess.in_threefold_repetition(),\r\n      });\r\n      setGameOver(checkGameOver());\r\n      setLastMove([move.from, move.to]);\r\n      setMovesLog(chess.history());\r\n    }\r\n  };\r\n\r\n  const undoMove = () => {\r\n    const lastMoveVerbose = chess.undo();\r\n    setLastMove([lastMoveVerbose?.from, lastMoveVerbose?.to]);\r\n    setFen(chess.fen());\r\n  };\r\n  const promotion = (e?: Exclude<PieceType, \"p\" | \"k\">) => {\r\n    const from = pendingMove[0];\r\n    const to = pendingMove[1];\r\n    chess.move({ from, to, promotion: e });\r\n    setFen(chess.fen());\r\n    // setLastMove([from, to])\r\n    hidePromotionModal();\r\n  };\r\n\r\n  const calcMovable = () => {\r\n    const dests = new Map();\r\n    chess.SQUARES.forEach((s) => {\r\n      const ms = chess.moves({ square: s, verbose: true });\r\n      if (ms.length)\r\n        dests.set(\r\n          s,\r\n          ms.map((m) => m.to)\r\n        );\r\n    });\r\n\r\n    return {\r\n      free: false,\r\n      dests: dests,\r\n      showDests: true,\r\n      events: {\r\n        after: (from: any, to: any, metadeta: any) => {\r\n          // console.log(\"metadata: \", { from, to, metadeta });\r\n          return handleMove({ from: from, to: to });\r\n        },\r\n      },\r\n      rookCastle: true,\r\n    };\r\n  };\r\n\r\n  return {\r\n    chess,\r\n    turnColor,\r\n    handleMove,\r\n    undoMove,\r\n    pendingMove,\r\n    lastMove,\r\n    fen,\r\n    promotion,\r\n    calcMovable,\r\n    promotionModal,\r\n    showPromotionModal,\r\n    movesLog,\r\n    gameOver,\r\n  };\r\n};\r\n\r\nexport default useChess;\r\n","export default __webpack_public_path__ + \"static/media/wQ.b069e38b.svg\";","export default __webpack_public_path__ + \"static/media/wR.a5a16b36.svg\";","export default __webpack_public_path__ + \"static/media/wB.6a5db4e0.svg\";","export default __webpack_public_path__ + \"static/media/wN.72ce2510.svg\";","import AgoraRTM, { RtmChannel, RtmClient, RtmTextMessage } from \"agora-rtm-sdk\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\ndeclare let window: any;\r\n\r\nconst useAgora = () => {\r\n  const [channel, setChannel] = useState<RtmChannel | null>(null);\r\n  const appId = \"f4b36b6c897e41bfaa3904d75da40777\";\r\n  const client: RtmClient | null = AgoraRTM.createInstance(appId);\r\n  let playerMeta = {\r\n    uid: (Math.floor(Math.random() * 90000) + 10000).toString(),\r\n    token: \"\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    const playerLogin = async () => {\r\n      axios\r\n        .get(\r\n          `https://agoratokenserver-demo.herokuapp.com/access_token?channel=test&uid=${playerMeta.uid}`\r\n        )\r\n        .then((res: any) => {\r\n          console.log(res);\r\n          playerMeta.token = res.data?.token || \"\";\r\n          // console.log(\"LOGIN OPTIONS: \", playerMeta);\r\n          client.login(playerMeta).then(() => {\r\n            console.log(\"Login successful\");\r\n            const newChannel = client.createChannel(\"test\");\r\n            newChannel.join();\r\n            setChannel(newChannel);\r\n          });\r\n        });\r\n    };\r\n\r\n    playerLogin().then(() => {\r\n      console.log(\"integrations successful\");\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (channel) {\r\n      channel?.on(\"ChannelMessage\", (message: any, memberId: any) => {\r\n        const parsedTextMessage = JSON.parse(message.text);\r\n        window.document\r\n          .getElementById(\"chat-section\")\r\n          .appendChild(document.createElement(\"div\"))\r\n          .append(`${parsedTextMessage.uid}: ${parsedTextMessage.msg}`);\r\n      });\r\n      channel?.on(\"MemberJoined\", function (memberId) {\r\n        console.log(\"New member joined: \", memberId);\r\n      });\r\n\r\n      //   channel?.join();\r\n    }\r\n  }, [channel]);\r\n\r\n  const sendMsgInChannel = (message: string) => {\r\n    const textObject: {\r\n      uid: string;\r\n      msg: string;\r\n    } = {\r\n      uid: playerMeta.uid,\r\n      msg: message,\r\n    };\r\n    const msgObject: RtmTextMessage = {\r\n      text: JSON.stringify(textObject) || \"\",\r\n      messageType: \"TEXT\",\r\n    };\r\n    channel?.sendMessage(msgObject).then(() => {\r\n      window.document\r\n        .getElementById(\"chat-section\")\r\n        .appendChild(document.createElement(\"div\"))\r\n        .append(`${playerMeta.uid}: ${textObject.msg}`);\r\n    });\r\n  };\r\n\r\n  return { playerMeta, sendMsgInChannel };\r\n};\r\n\r\nexport default useAgora;\r\n","import { useEffect, useState } from \"react\";\nimport { Key } from \"chessground/types\";\nimport Chessground from \"@react-chess/chessground\";\nimport useChess from \"./hooks/useChess\";\nimport queen from \"./assets/images/wQ.svg\";\nimport rook from \"./assets/images/wR.svg\";\nimport bishop from \"./assets/images/wB.svg\";\nimport knight from \"./assets/images/wN.svg\";\nimport \"./App.css\";\nimport useAgora from \"./hooks/useAgora\";\n\ndeclare let window: any;\n\nfunction App() {\n  const {\n    chess,\n    turnColor,\n    undoMove,\n    lastMove,\n    fen,\n    promotion,\n    calcMovable,\n    promotionModal,\n    movesLog,\n  } = useChess();\n  const { sendMsgInChannel } = useAgora();\n\n  const [innerWidth, setInnerWidth] = useState(window.innerWidth);\n  const [innerHeight, setInnerHeight] = useState(window.innerHeight);\n\n  useEffect(() => {\n    updateDimensions();\n    window.addEventListener(\"resize\", updateDimensions);\n\n    return () => window.removeEventListener(\"resize\", updateDimensions);\n  }, []);\n\n  const updateDimensions = () => {\n    setInnerWidth(window.innerWidth);\n    setInnerHeight(window.innerHeight);\n  };\n\n  let config = {\n    fen: fen,\n    coordinates: true,\n    turnColor: turnColor(),\n    addPieceZIndex: true,\n    autoCastle: true,\n    lastMove: lastMove,\n    highlight: {\n      lastMove: true,\n      check: true,\n    },\n    // animation: {\n    //   enabled: true,\n    //   duration: 5000,\n    // },\n    selectable: {\n      enabled: true,\n    },\n    movable: calcMovable(),\n    events: {\n      select: (key: Key) => {\n        // setSelectedChesspiece(key);\n        // console.log(new Map(key, chess.moves({square: key})));\n      },\n    },\n  };\n  return (\n    <div className=\"app\" id=\"chessboard\">\n      <div className=\"side-section\">\n        <div>\n          {movesLog?.map((move: String) => (\n            <>{move}, </>\n          ))}\n        </div>\n        {promotionModal && (\n          <div className=\"piece-promotion-prompt\">\n            Promote To?\n            <div className=\"roles\">\n              <span role=\"presentation\" onClick={() => promotion(\"q\")}>\n                <img src={queen} alt=\"\" style={{ width: 50 }} />\n              </span>\n              <span role=\"presentation\" onClick={() => promotion(\"r\")}>\n                <img src={rook} alt=\"\" style={{ width: 50 }} />\n              </span>\n              <span role=\"presentation\" onClick={() => promotion(\"b\")}>\n                <img src={bishop} alt=\"\" style={{ width: 50 }} />\n              </span>\n              <span role=\"presentation\" onClick={() => promotion(\"n\")}>\n                <img src={knight} alt=\"\" style={{ width: 50 }} />\n              </span>\n            </div>\n          </div>\n        )}\n        {chess.fen() !==\n          \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\" && (\n          <div\n            className=\"undo-btn\"\n            onClick={() => {\n              undoMove();\n            }}\n          >\n            Undo\n          </div>\n        )}\n        <div>\n          <div\n            id=\"chat-section\"\n            className=\"chat-section\"\n            style={{ padding: 10, border: \"black\" }}\n          ></div>\n          <div style={{ display: \"flex\" }}>\n            <input type=\"text\" id=\"chatbox\" />\n            <button\n              onClick={() => {\n                sendMsgInChannel(\n                  window.document.getElementById(\"chatbox\").value\n                );\n              }}\n              style={{ padding: 10 }}\n            >\n              Send\n            </button>\n          </div>\n        </div>\n      </div>\n      <div className=\"main-chessboard\">\n        <Chessground\n          width={\n            innerWidth < innerHeight ? innerWidth * 0.5 : innerHeight * 0.5\n          }\n          height={\n            innerWidth < innerHeight ? innerWidth * 0.5 : innerHeight * 0.5\n          }\n          config={{ ...config }}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}