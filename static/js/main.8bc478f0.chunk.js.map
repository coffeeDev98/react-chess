{"version":3,"sources":["assets/images/wQ.svg","assets/images/wR.svg","assets/images/wB.svg","assets/images/wN.svg","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Chess","require","App","useState","chess","fen","setFen","pendingMove","setPendingMove","promotionModal","setPromotionModal","lastMove","setLastMove","window","innerWidth","setInnerWidth","innerHeight","setInnerHeight","channel","setChannel","chatHistory","client","AgoraRTM","createInstance","playerMeta","uid","Math","floor","random","toString","token","useEffect","playerLogin","then","console","log","on","message","memberId","parsedTextMessage","JSON","parse","text","document","getElementById","appendChild","createElement","append","msg","join","a","axios","get","res","data","login","createChannel","updateDimensions","addEventListener","removeEventListener","promotion","e","from","to","move","config","coordinates","turnColor","turn","colors","addPieceZIndex","autoCastle","highlight","selectable","enabled","movable","dests","Map","SQUARES","forEach","s","ms","moves","square","verbose","length","set","map","m","free","showDests","events","after","metadeta","i","len","flags","indexOf","moveVerbose","san","gameOverCheck","game_over","handleMove","rookCastle","calcMovable","select","key","className","id","role","onClick","src","queen","alt","style","width","rook","bishop","knight","lastMoveVerbose","undo","padding","border","display","type","textObject","msgObject","stringify","messageType","sendMessage","sendMsgInChannel","value","height","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8bc478f0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/wQ.b069e38b.svg\";","export default __webpack_public_path__ + \"static/media/wR.a5a16b36.svg\";","export default __webpack_public_path__ + \"static/media/wB.6a5db4e0.svg\";","export default __webpack_public_path__ + \"static/media/wN.72ce2510.svg\";","import React, { useEffect, useState } from \"react\";\nimport Chessground from \"@react-chess/chessground\";\nimport \"./App.css\";\nimport { ChessInstance, PieceType, ShortMove } from \"chess.js\";\nimport { Key, Role, Dests, Color, colors } from \"chessground/types\";\nimport queen from \"./assets/images/wQ.svg\";\nimport rook from \"./assets/images/wR.svg\";\nimport bishop from \"./assets/images/wB.svg\";\nimport knight from \"./assets/images/wN.svg\";\nimport { updateDimensions } from \"./utils\";\nimport AgoraRTM, {\n  RtmChannel,\n  RtmClient,\n  RtmMessage,\n  RtmTextMessage,\n} from \"agora-rtm-sdk\";\nimport axios from \"axios\";\nconst Chess = require(\"chess.js\");\n\ndeclare let window: any;\n\nfunction App() {\n  const [chess] = useState<ChessInstance>(\n    new Chess(\"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\")\n  );\n  const [fen, setFen] = useState(chess.fen());\n  const [pendingMove, setPendingMove] = useState<any>();\n  const [promotionModal, setPromotionModal] = useState(false);\n  const [lastMove, setLastMove] = useState<any>();\n  const [innerWidth, setInnerWidth] = useState(window.innerWidth);\n  const [innerHeight, setInnerHeight] = useState(window.innerHeight);\n  // const [selectedChesspiece, setSelectedChesspiece] = useState<any>();\n\n  // AGORA INTEGRATION\n  const [channel, setChannel] = useState<RtmChannel | null>(null);\n  const [chatHistory, setChatHistory] = useState<RtmTextMessage[]>([]);\n  const appId = \"f4b36b6c897e41bfaa3904d75da40777\";\n  const client: RtmClient | null = AgoraRTM.createInstance(appId);\n  let playerMeta = {\n    uid: (Math.floor(Math.random() * 90000) + 10000).toString(),\n    token: \"\",\n  };\n  // let channel: RtmChannel | null = null;\n  useEffect(() => {\n    playerLogin().then(() => {\n      console.log(\"integrations successful\");\n    });\n  }, []);\n\n  useEffect(() => {\n    if (channel) {\n      // Channel listeners\n      // Executed when message is received\n      channel?.on(\"ChannelMessage\", (message: any, memberId: any) => {\n        console.log(\"MESSAGE: \", message, [chatHistory, message]);\n        // setChatHistory([...chatHistory, message]);\n        const parsedTextMessage = JSON.parse(message.text);\n        window.document\n          .getElementById(\"chat-section\")\n          .appendChild(document.createElement(\"div\"))\n          .append(`${parsedTextMessage.uid}: ${parsedTextMessage.msg}`);\n      });\n      channel?.on(\"MemberJoined\", function (memberId) {\n        console.log(\"New member joined: \", memberId);\n      });\n\n      channel?.join();\n      // .then(() => {\n      //   const msgObject: RtmTextMessage = {\n      //     text: \"Hello\",\n      //     messageType: \"TEXT\",\n      //   };\n      //   channel?.sendMessage(msgObject).then(() => {\n      //     setChatHistory([...chatHistory, msgObject]);\n      //   });\n      // });\n    }\n  }, [channel]);\n  useEffect(() => {\n    console.log(\"CHAT HISTORY: \", chatHistory);\n  }, [chatHistory]);\n  const playerLogin = async () => {\n    axios\n      .get(\n        `https://agoratokenserver-demo.herokuapp.com/access_token?channel=test&uid=${playerMeta.uid}`\n      )\n      .then((res: any) => {\n        console.log(res);\n        playerMeta.token = res.data?.token || \"\";\n        // console.log(\"LOGIN OPTIONS: \", playerMeta);\n        client.login(playerMeta).then(() => {\n          console.log(\"Login successful\");\n          setChannel(client.createChannel(\"test\"));\n        });\n      });\n  };\n\n  const sendMsgInChannel = (message: string) => {\n    const textObject: {\n      uid: string;\n      msg: string;\n    } = {\n      uid: playerMeta.uid,\n      msg: message,\n    };\n    const msgObject: RtmTextMessage = {\n      text: JSON.stringify(textObject) || \"\",\n      messageType: \"TEXT\",\n    };\n    channel?.sendMessage(msgObject).then(() => {\n      window.document\n        .getElementById(\"chat-section\")\n        .appendChild(document.createElement(\"div\"))\n        .append(`${playerMeta.uid}: ${textObject.msg}`);\n    });\n  };\n  // AGORA INTEGRATION END\n\n  useEffect(() => {\n    updateDimensions();\n    window.addEventListener(\"resize\", updateDimensions);\n\n    return () => window.removeEventListener(\"resize\", updateDimensions);\n  }, []);\n  useEffect(() => {\n    console.log(\"pendingMove: \", pendingMove);\n  }, [pendingMove]);\n\n  const updateDimensions = () => {\n    setInnerWidth(window.innerWidth);\n    setInnerHeight(window.innerHeight);\n  };\n\n  const turnColor = () => (chess.turn() === \"w\" ? colors[0] : colors[1]);\n\n  const handleMove = (move: ShortMove) => {\n    const moves = chess.moves({ verbose: true });\n    console.log(\"moves: \", chess.moves());\n\n    for (let i = 0, len = moves.length; i < len; i++) {\n      /* eslint-disable-line */\n      if (moves[i].flags.indexOf(\"p\") !== -1 && moves[i].from === move.from) {\n        setPendingMove([move.from, move.to]);\n        setPromotionModal(true);\n        return;\n      }\n    }\n    const moveVerbose = chess.move(move);\n    if (moveVerbose) {\n      console.log(moveVerbose.san);\n      setFen(chess.fen());\n      const gameOverCheck = chess.game_over();\n      console.log(\"game-over: \", gameOverCheck);\n      setLastMove([move.from, move.to]);\n    }\n  };\n\n  const handleMoveUndo = () => {\n    const lastMoveVerbose = chess.undo();\n    setLastMove([lastMoveVerbose?.from, lastMoveVerbose?.to]);\n    setFen(chess.fen());\n  };\n\n  const promotion = (e?: Exclude<PieceType, \"p\" | \"k\">) => {\n    const from = pendingMove[0];\n    const to = pendingMove[1];\n    chess.move({ from, to, promotion: e });\n    setFen(chess.fen());\n    // setLastMove([from, to])\n    setPromotionModal(false);\n  };\n\n  const calcMovable = () => {\n    const dests = new Map();\n    chess.SQUARES.forEach((s) => {\n      const ms = chess.moves({ square: s, verbose: true });\n      if (ms.length)\n        dests.set(\n          s,\n          ms.map((m) => m.to)\n        );\n    });\n\n    return {\n      free: false,\n      dests: dests,\n      showDests: true,\n      events: {\n        after: (from: any, to: any, metadeta: any) => {\n          // console.log(\"metadata: \", { from, to, metadeta });\n          return handleMove({ from: from, to: to });\n        },\n      },\n      rookCastle: true,\n    };\n  };\n\n  let config = {\n    fen: fen,\n    coordinates: true,\n    turnColor: turnColor(),\n    addPieceZIndex: true,\n    autoCastle: true,\n    lastMove: lastMove,\n    highlight: {\n      lastMove: true,\n    },\n    selectable: {\n      enabled: true,\n    },\n    movable: calcMovable(),\n    events: {\n      select: (key: Key) => {\n        // setSelectedChesspiece(key);\n        // console.log(new Map(key, chess.moves({square: key})));\n      },\n    },\n  };\n  return (\n    <div className=\"app\" id=\"chessboard\">\n      <div className=\"side-section\">\n        {promotionModal && (\n          <div className=\"piece-promotion-prompt\">\n            Promote To?\n            <div className=\"roles\">\n              <span role=\"presentation\" onClick={() => promotion(\"q\")}>\n                <img src={queen} alt=\"\" style={{ width: 50 }} />\n              </span>\n              <span role=\"presentation\" onClick={() => promotion(\"r\")}>\n                <img src={rook} alt=\"\" style={{ width: 50 }} />\n              </span>\n              <span role=\"presentation\" onClick={() => promotion(\"b\")}>\n                <img src={bishop} alt=\"\" style={{ width: 50 }} />\n              </span>\n              <span role=\"presentation\" onClick={() => promotion(\"n\")}>\n                <img src={knight} alt=\"\" style={{ width: 50 }} />\n              </span>\n            </div>\n          </div>\n        )}\n        {chess.fen() !==\n          \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\" && (\n          <div className=\"undo-btn\" onClick={handleMoveUndo}>\n            Undo\n          </div>\n        )}\n        <div>\n          <div\n            id=\"chat-section\"\n            className=\"chat-section\"\n            style={{ padding: 10, border: \"black\" }}\n          ></div>\n          <div style={{ display: \"flex\" }}>\n            <input type=\"text\" id=\"chatbox\" />\n            <button\n              onClick={() => {\n                sendMsgInChannel(\n                  window.document.getElementById(\"chatbox\").value\n                );\n              }}\n              style={{ padding: 10 }}\n            >\n              Send\n            </button>\n          </div>\n        </div>\n      </div>\n      <div className=\"main-chessboard\">\n        <Chessground\n          width={\n            innerWidth < innerHeight ? innerWidth * 0.5 : innerHeight * 0.5\n          }\n          height={\n            innerWidth < innerHeight ? innerWidth * 0.5 : innerHeight * 0.5\n          }\n          config={{ ...config }}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}