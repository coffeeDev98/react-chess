{"version":3,"sources":["assets/images/wQ.svg","assets/images/wR.svg","assets/images/wB.svg","assets/images/wN.svg","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Chess","require","App","useState","chess","fen","setFen","pendingMove","setPendingMove","promotionModal","setPromotionModal","lastMove","setLastMove","window","innerWidth","setInnerWidth","innerHeight","setInnerHeight","useEffect","updateDimensions","addEventListener","removeEventListener","console","log","promotion","e","from","to","move","config","coordinates","turnColor","turn","colors","addPieceZIndex","autoCastle","highlight","selectable","enabled","movable","dests","Map","SQUARES","forEach","s","ms","moves","square","verbose","length","set","map","m","free","showDests","events","after","metadeta","i","len","flags","indexOf","handleMove","rookCastle","calcMovable","select","key","className","id","style","textAlign","cursor","role","onClick","src","queen","alt","width","rook","bishop","knight","height","position","bottom","left","transform","lastMoveVerbose","undo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.daf3a2a8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/wQ.b069e38b.svg\";","export default __webpack_public_path__ + \"static/media/wR.a5a16b36.svg\";","export default __webpack_public_path__ + \"static/media/wB.6a5db4e0.svg\";","export default __webpack_public_path__ + \"static/media/wN.72ce2510.svg\";","import React, { useEffect, useState } from \"react\";\nimport Chessground from \"@react-chess/chessground\";\nimport \"./App.css\";\nimport { ChessInstance, PieceType, ShortMove } from \"chess.js\";\nimport { Key, Role, Dests, Color, colors } from \"chessground/types\";\nimport queen from \"./assets/images/wQ.svg\";\nimport rook from \"./assets/images/wR.svg\";\nimport bishop from \"./assets/images/wB.svg\";\nimport knight from \"./assets/images/wN.svg\";\nimport { updateDimensions } from \"./utils\";\nconst Chess = require(\"chess.js\");\n\ndeclare let window: any;\n\nfunction App() {\n  const [chess] = useState<ChessInstance>(\n    new Chess(\"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\")\n  );\n  const [fen, setFen] = useState(chess.fen());\n  const [pendingMove, setPendingMove] = useState<any>();\n  const [promotionModal, setPromotionModal] = useState(false);\n  const [lastMove, setLastMove] = useState<any>();\n  const [innerWidth, setInnerWidth] = useState(window.innerWidth);\n  const [innerHeight, setInnerHeight] = useState(window.innerHeight);\n  // const [selectedChesspiece, setSelectedChesspiece] = useState<any>();\n\n  useEffect(() => {\n    updateDimensions();\n    window.addEventListener(\"resize\", updateDimensions);\n\n    return () => window.removeEventListener(\"resize\", updateDimensions);\n  }, []);\n  useEffect(() => {\n    console.log(\"pendingMove: \", pendingMove);\n  }, [pendingMove]);\n\n  const updateDimensions = () => {\n    setInnerWidth(window.innerWidth);\n    setInnerHeight(window.innerHeight);\n  };\n\n  const turnColor = () => (chess.turn() === \"w\" ? colors[0] : colors[1]);\n\n  const handleMove = (move: ShortMove) => {\n    const moves = chess.moves({ verbose: true });\n    for (let i = 0, len = moves.length; i < len; i++) {\n      /* eslint-disable-line */\n      if (moves[i].flags.indexOf(\"p\") !== -1 && moves[i].from === move.from) {\n        setPendingMove([move.from, move.to]);\n        setPromotionModal(true);\n        return;\n      }\n    }\n    if (chess.move(move)) {\n      setFen(chess.fen());\n      setLastMove([move.from, move.to]);\n    }\n  };\n  const handleMoveUndo = () => {\n    const lastMoveVerbose = chess.undo();\n    setLastMove([lastMoveVerbose?.from, lastMoveVerbose?.to]);\n    setFen(chess.fen());\n  };\n\n  const promotion = (e?: Exclude<PieceType, \"p\" | \"k\">) => {\n    const from = pendingMove[0];\n    const to = pendingMove[1];\n    chess.move({ from, to, promotion: e });\n    setFen(chess.fen());\n    // setLastMove([from, to])\n    setPromotionModal(false);\n  };\n\n  const calcMovable = () => {\n    const dests = new Map();\n    chess.SQUARES.forEach((s) => {\n      const ms = chess.moves({ square: s, verbose: true });\n      if (ms.length)\n        dests.set(\n          s,\n          ms.map((m) => m.to)\n        );\n    });\n\n    return {\n      free: false,\n      dests: dests,\n      showDests: true,\n      events: {\n        after: (from: any, to: any, metadeta: any) => {\n          console.log(\"metadata: \", { from, to, metadeta });\n          return handleMove({ from: from, to: to });\n        },\n      },\n      rookCastle: true,\n    };\n  };\n\n  let config = {\n    fen: fen,\n    coordinates: true,\n    turnColor: turnColor(),\n    addPieceZIndex: true,\n    autoCastle: true,\n    lastMove: lastMove,\n    highlight: {\n      lastMove: true,\n    },\n    selectable: {\n      enabled: true,\n    },\n    movable: calcMovable(),\n    events: {\n      select: (key: Key) => {\n        // setSelectedChesspiece(key);\n        // console.log(new Map(key, chess.moves({square: key})));\n      },\n    },\n  };\n  return (\n    <div className=\"App\" id=\"chessboard\">\n      {promotionModal && (\n        <div style={{ textAlign: \"center\" }}>\n          Promote To?\n          <div style={{ textAlign: \"center\", cursor: \"pointer\" }}>\n            <span role=\"presentation\" onClick={() => promotion(\"q\")}>\n              <img src={queen} alt=\"\" style={{ width: 50 }} />\n            </span>\n            <span role=\"presentation\" onClick={() => promotion(\"r\")}>\n              <img src={rook} alt=\"\" style={{ width: 50 }} />\n            </span>\n            <span role=\"presentation\" onClick={() => promotion(\"b\")}>\n              <img src={bishop} alt=\"\" style={{ width: 50 }} />\n            </span>\n            <span role=\"presentation\" onClick={() => promotion(\"n\")}>\n              <img src={knight} alt=\"\" style={{ width: 50 }} />\n            </span>\n          </div>\n        </div>\n      )}\n      <div className=\"main\">\n        <Chessground\n          width={innerWidth < innerHeight ? innerWidth : innerHeight}\n          height={innerWidth < innerHeight ? innerWidth : innerHeight}\n          config={{ ...config }}\n        />\n      </div>\n      {chess.fen() !==\n        \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\" && (\n        <div\n          style={{\n            textAlign: \"center\",\n            cursor: \"pointer\",\n            position: \"absolute\",\n            bottom: 0,\n            left: \"50%\",\n            transform: \"translate(-50%,0)\",\n          }}\n          onClick={handleMoveUndo}\n        >\n          Undo\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}